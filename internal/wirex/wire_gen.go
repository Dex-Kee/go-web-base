// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wirex

import (
	"context"
	"github.com/LyricTian/gin-admin/v10/internal/mods"
	"github.com/LyricTian/gin-admin/v10/internal/mods/rbac"
	"github.com/LyricTian/gin-admin/v10/internal/mods/rbac/api"
	"github.com/LyricTian/gin-admin/v10/internal/mods/rbac/biz"
	"github.com/LyricTian/gin-admin/v10/internal/mods/rbac/dal"
	"github.com/LyricTian/gin-admin/v10/internal/utils"
)

// Injectors from wire.go:

func BuildInjector(ctx context.Context) (*Injector, func(), error) {
	cacher, cleanup, err := InitCacher(ctx)
	if err != nil {
		return nil, nil, err
	}
	db, cleanup2, err := InitDB(ctx)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	trans := &utils.Trans{
		DB: db,
	}
	resource := &dal.Resource{
		DB: db,
	}
	bizResource := &biz.Resource{
		Trans:       trans,
		ResourceDAL: resource,
	}
	apiResource := &api.Resource{
		ResourceBIZ: bizResource,
	}
	rbacRBAC := &rbac.RBAC{
		DB:          db,
		ResourceAPI: apiResource,
	}
	modsMods := &mods.Mods{
		RBAC: rbacRBAC,
	}
	injector := &Injector{
		Cache: cacher,
		DB:    db,
		M:     modsMods,
	}
	return injector, func() {
		cleanup2()
		cleanup()
	}, nil
}
