// Package swagger GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/rbac/v1/current/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Logout system",
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/current/menus": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Query current user privilege menu trees",
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utilx.ListResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/typed.Menu"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/current/password": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Update current user login password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.LoginPasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/current/refreshtoken": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Refresh current login token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.LoginToken"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/current/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/login": {
            "post": {
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Login system by username and password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.LoginToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/login/captcha": {
            "get": {
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Write captcha image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CaptchaID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Reload captcha image (reload=1)",
                        "name": "reload",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Captcha image"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/login/captchaid": {
            "get": {
                "tags": [
                    "LoginAPI"
                ],
                "summary": "Get captcha id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.Captcha"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/menus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Query menu tree",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "parent id",
                        "name": "parentID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "menu name (fuzzy query)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "menu status (enabled/disabled)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utilx.ListResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/typed.Menu"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Create menu",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.MenuCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.Menu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/menus/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Get single menu by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.Menu"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Update menu by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.MenuCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Delete single menu by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/menus/{id}/disable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Disable menu status by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/menus/{id}/enable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "MenuAPI"
                ],
                "summary": "Enable menu status by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Query role list",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "pagination index",
                        "name": "current",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "pagination size",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "role name (fuzzy query)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "role status (enabled/disabled)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": " result type (select/paginate, default: paginate)",
                        "name": "result",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utilx.ListResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/typed.Role"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.RoleCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/roles/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Get single role by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.Role"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Update role by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.RoleCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Delete single role by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/roles/{id}/disable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Disable role status by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/roles/{id}/enable": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "RoleAPI"
                ],
                "summary": "Enable role status by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Query user list",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "pagination index",
                        "name": "current",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "pagination size",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user status (enabled/disabled)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name (fuzzy query)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "username (fuzzy query)",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "roleID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utilx.ListResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/typed.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Get single user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Update user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Delete single user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/users/{id}/active": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Active user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/rbac/v1/users/{id}/freeze": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "UserAPI"
                ],
                "summary": "Freeze user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/sys/v1/dictionaries": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "DictionaryAPI"
                ],
                "summary": "Query dictionary list",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "pagination index",
                        "name": "current",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "pagination size",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "query namespace",
                        "name": "ns",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query key",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "query result",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utilx.ListResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/typed.Dictionary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "DictionaryAPI"
                ],
                "summary": "Create dictionary",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.DictionaryCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.Dictionary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        },
        "/api/sys/v1/dictionaries/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "DictionaryAPI"
                ],
                "summary": "Get single dictionary by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/typed.Dictionary"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "DictionaryAPI"
                ],
                "summary": "Update dictionary by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/typed.DictionaryCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "DictionaryAPI"
                ],
                "summary": "Delete single dictionary by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unique id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok=true",
                        "schema": {
                            "$ref": "#/definitions/utilx.OkResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utilx.ErrorResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "typed.Captcha": {
            "type": "object",
            "properties": {
                "captcha_id": {
                    "type": "string"
                }
            }
        },
        "typed.Dictionary": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "description": "Key of the dictionary",
                    "type": "string"
                },
                "ns": {
                    "description": "Namespace of the dictionary",
                    "type": "string"
                },
                "remark": {
                    "description": "Remark of the key",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "value": {
                    "description": "Value of the key",
                    "type": "string"
                }
            }
        },
        "typed.DictionaryCreate": {
            "type": "object",
            "required": [
                "key",
                "ns"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "ns": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "typed.LoginPasswordUpdate": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "typed.LoginToken": {
            "type": "object",
            "required": [
                "access_token",
                "expires_at",
                "token_type"
            ],
            "properties": {
                "access_token": {
                    "description": "jwt token",
                    "type": "string"
                },
                "expires_at": {
                    "description": "unix timestamp",
                    "type": "integer"
                },
                "token_type": {
                    "description": "Usage: (Authorization=token_type token)",
                    "type": "string"
                }
            }
        },
        "typed.Menu": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/typed.MenuAction"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/typed.Menu"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "hide": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "parent_path": {
                    "description": "parent path (split by '.')",
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "typed.MenuAction": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the action (for example, add, edit, delete, etc.)",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "menu_id": {
                    "type": "string"
                },
                "name": {
                    "description": "Name of the action (for example, Add, Edit, Delete, etc.)",
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/typed.MenuActionResource"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "typed.MenuActionResource": {
            "type": "object",
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "menu_id": {
                    "type": "string"
                },
                "method": {
                    "description": "HTTP Method (GET, POST, PUT, DELETE)",
                    "type": "string"
                },
                "path": {
                    "description": "Path of the resource (:id means the parameter is required)",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "typed.MenuCreate": {
            "type": "object",
            "required": [
                "name",
                "sequence"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/typed.MenuAction"
                    }
                },
                "hide": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                }
            }
        },
        "typed.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "role_menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/typed.RoleMenu"
                    }
                },
                "sequence": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "typed.RoleCreate": {
            "type": "object",
            "required": [
                "name",
                "sequence"
            ],
            "properties": {
                "menus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/typed.RoleMenu"
                    }
                },
                "name": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                }
            }
        },
        "typed.RoleMenu": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "menu_action_id": {
                    "type": "string"
                },
                "menu_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "typed.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Name of the user",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "user_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/typed.UserRole"
                    }
                },
                "username": {
                    "description": "Login username (must be unique)",
                    "type": "string"
                }
            }
        },
        "typed.UserCreate": {
            "type": "object",
            "required": [
                "name",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "typed.UserLogin": {
            "type": "object",
            "required": [
                "captcha_code",
                "captcha_id",
                "login_name",
                "password"
            ],
            "properties": {
                "captcha_code": {
                    "description": "captcha verify code",
                    "type": "string"
                },
                "captcha_id": {
                    "description": "captcha verify id",
                    "type": "string"
                },
                "login_name": {
                    "description": "login username",
                    "type": "string"
                },
                "password": {
                    "description": "login password (md5)",
                    "type": "string"
                }
            }
        },
        "typed.UserRole": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/typed.Role"
                },
                "role_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utilx.ErrorResult": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/errors.Error"
                }
            }
        },
        "utilx.ListResult": {
            "type": "object",
            "properties": {
                "list": {},
                "pagination": {
                    "$ref": "#/definitions/utilx.PaginationResult"
                }
            }
        },
        "utilx.OkResult": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "utilx.PaginationResult": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "9.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "ginadmin",
	Description:      "A simple, modular, high-performance RBAC development framework built on golang.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
