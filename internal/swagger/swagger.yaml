definitions:
  errors.Error:
    properties:
      code:
        type: integer
      detail:
        type: string
      id:
        type: string
      status:
        type: string
    type: object
  schema.Resource:
    properties:
      action:
        description: Resource action
        type: string
      code:
        description: 'Unique code (format: module.resource.action)'
        type: string
      created_at:
        description: Create time
        type: string
      description:
        description: Description
        type: string
      id:
        description: Unique ID
        type: string
      object:
        description: Resource object
        type: string
      status:
        description: Status (enabled/disabled)
        type: string
      updated_at:
        description: Update time
        type: string
    type: object
  schema.ResourceSave:
    properties:
      action:
        description: Resource action
        type: string
      code:
        description: 'Unique code (format: module.resource.action)'
        type: string
      description:
        description: Description
        type: string
      object:
        description: Resource object
        type: string
      status:
        description: Status (enabled/disabled)
        enum:
        - enabled
        - disabled
        type: string
    required:
    - action
    - object
    - status
    type: object
  utils.ResponseResult:
    properties:
      data: {}
      error:
        $ref: '#/definitions/errors.Error'
      success:
        type: boolean
      total:
        type: integer
    type: object
info:
  contact: {}
  description: A lightweight, simple yet elegant RBAC solution based on GIN + Gorm
    2.0 + Casbin + Wire.
  title: GIN-ADMIN
  version: v10.0.0-beta
paths:
  /api/v1/resources:
    get:
      parameters:
      - default: 1
        description: pagination index
        in: query
        name: current
        required: true
        type: integer
      - default: 10
        description: pagination size
        in: query
        name: pageSize
        required: true
        type: integer
      - description: resource code (fuzzy query)
        in: query
        name: code
        type: string
      - description: resource status (enabled, disabled)
        in: query
        name: status
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.ResponseResult'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/schema.Resource'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseResult'
      security:
      - ApiKeyAuth: []
      summary: Query resource list
      tags:
      - ResourceAPI
    post:
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.ResourceSave'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.ResponseResult'
            - properties:
                data:
                  $ref: '#/definitions/schema.Resource'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseResult'
      security:
      - ApiKeyAuth: []
      summary: Create resource record
      tags:
      - ResourceAPI
  /api/v1/resources/{id}:
    delete:
      parameters:
      - description: unique id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseResult'
      security:
      - ApiKeyAuth: []
      summary: Delete resource record by ID
      tags:
      - ResourceAPI
    get:
      parameters:
      - description: unique id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.ResponseResult'
            - properties:
                data:
                  $ref: '#/definitions/schema.Resource'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseResult'
      security:
      - ApiKeyAuth: []
      summary: Get resource record by ID
      tags:
      - ResourceAPI
    put:
      parameters:
      - description: unique id
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.ResourceSave'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ResponseResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseResult'
      security:
      - ApiKeyAuth: []
      summary: Update resource record by ID
      tags:
      - ResourceAPI
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
